{"version":3,"sources":["../src/modal_confirm_report.js"],"names":["define","$","ajax","ModalFactory","CustomEvents","Modal","ModalEvents","ModalRegistry","registered","SELECTORS","ACCEPT_BUTTON","CANCEL_BUTTON","ModalConfirmReport","root","call","getFooter","find","length","Notification","exception","message","TYPE","prototype","Object","create","constructor","registerEventListeners","getModal","on","events","activate","e","data","cancelEvent","Event","cancel","getRoot","trigger","isDefaultPrevented","hide","originalEvent","preventDefault","bind","register"],"mappings":"AAAAA,OAAM,6CAAC,CAAC,QAAD,CACC,WADD,CAEC,oBAFD,CAGC,gCAHD,CAIC,YAJD,CAKC,mBALD,CAMC,qBAND,CAAD,CAOE,SAASC,CAAT,CAAYC,CAAZ,CAAkBC,CAAlB,CAAgCC,CAAhC,CAA8CC,CAA9C,CAAqDC,CAArD,CAAkEC,CAAlE,CAAiF,IAEjFC,CAAAA,CAAU,GAFuE,CAGjFC,CAAS,CAAG,CACZC,aAAa,CAAE,oCADH,CAEZC,aAAa,CAAE,qCAFH,CAHqE,CAajFC,CAAkB,CAAG,SAASC,CAAT,CAAe,CACpCR,CAAK,CAACS,IAAN,CAAW,IAAX,CAAiBD,CAAjB,EAEA,GAAI,CAAC,KAAKE,SAAL,GAAiBC,IAAjB,CAAsBP,CAAS,CAACC,aAAhC,EAA+CO,MAApD,CAA4D,CACxDC,YAAY,CAACC,SAAb,CAAuB,CAACC,OAAO,CAAE,uBAAV,CAAvB,CACH,CAED,GAAI,CAAC,KAAKL,SAAL,GAAiBC,IAAjB,CAAsBP,CAAS,CAACE,aAAhC,EAA+CM,MAApD,CAA4D,CACxDC,YAAY,CAACC,SAAb,CAAuB,CAACC,OAAO,CAAE,wBAAV,CAAvB,CACH,CACJ,CAvBoF,CAyBrFR,CAAkB,CAACS,IAAnB,CAA0B,2CAA1B,CAEAT,CAAkB,CAACU,SAAnB,CAA+BC,MAAM,CAACC,MAAP,CAAcnB,CAAK,CAACiB,SAApB,CAA/B,CACAV,CAAkB,CAACU,SAAnB,CAA6BG,WAA7B,CAA2Cb,CAA3C,CAOCA,CAAkB,CAACU,SAAnB,CAA6BI,sBAA7B,CAAsD,UAAW,CAE9DrB,CAAK,CAACiB,SAAN,CAAgBI,sBAAhB,CAAuCZ,IAAvC,CAA4C,IAA5C,EAEA,KAAKa,QAAL,GAAgBC,EAAhB,CAAmBxB,CAAY,CAACyB,MAAb,CAAoBC,QAAvC,CAAiDrB,CAAS,CAACE,aAA3D,CAA0E,SAASoB,CAAT,CAAYC,CAAZ,CAAkB,CACxF,GAAIC,CAAAA,CAAW,CAAGhC,CAAC,CAACiC,KAAF,CAAQ5B,CAAW,CAAC6B,MAApB,CAAlB,CACA,KAAKC,OAAL,GAAeC,OAAf,CAAuBJ,CAAvB,CAAoC,IAApC,EAEA,GAAI,CAACA,CAAW,CAACK,kBAAZ,EAAL,CAAuC,CACnC,KAAKC,IAAL,GACAP,CAAI,CAACQ,aAAL,CAAmBC,cAAnB,EACH,CACJ,CARyE,CAQxEC,IARwE,CAQnE,IARmE,CAA1E,CASH,CAbA,CAiBD,GAAI,CAAClC,CAAL,CAAiB,CACbD,CAAa,CAACoC,QAAd,CAAuB/B,CAAkB,CAACS,IAA1C,CAAgDT,CAAhD,CAAoE,2CAApE,EACAJ,CAAU,GACb,CAED,MAAOI,CAAAA,CACV,CAjEK,CAAN","sourcesContent":["define(['jquery',\n        'core/ajax',\n        'core/modal_factory',\n        'core/custom_interaction_events',\n        'core/modal',\n        'core/modal_events',\n        'core/modal_registry'],\n        function($, ajax, ModalFactory, CustomEvents, Modal, ModalEvents, ModalRegistry) {\n\n    var registered = false;\n    var SELECTORS = {\n        ACCEPT_BUTTON: '[data-action=\"acept-generation\"]',\n        CANCEL_BUTTON: '[data-action=\"cancel-generation\"]',\n    };\n\n    /**\n     * Constructor for the Modal.\n     *\n     * @param {object} root The root jQuery element for the modal\n     */\n    var ModalConfirmReport = function(root) {\n        Modal.call(this, root);\n\n        if (!this.getFooter().find(SELECTORS.ACCEPT_BUTTON).length) {\n            Notification.exception({message: 'No login button found'});\n        }\n\n        if (!this.getFooter().find(SELECTORS.CANCEL_BUTTON).length) {\n            Notification.exception({message: 'No cancel button found'});\n        }\n    };\n\n    ModalConfirmReport.TYPE = 'local_plantalentosuv-modal_confirm_report';\n\n    ModalConfirmReport.prototype = Object.create(Modal.prototype);\n    ModalConfirmReport.prototype.constructor = ModalConfirmReport;\n\n    /**\n     * Set up all of the event handling for the modal.\n     *\n     * @method registerEventListeners\n     */\n     ModalConfirmReport.prototype.registerEventListeners = function() {\n        // Apply parent event listeners.\n        Modal.prototype.registerEventListeners.call(this);\n\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.CANCEL_BUTTON, function(e, data) {\n            var cancelEvent = $.Event(ModalEvents.cancel);\n            this.getRoot().trigger(cancelEvent, this);\n\n            if (!cancelEvent.isDefaultPrevented()) {\n                this.hide();\n                data.originalEvent.preventDefault();\n            }\n        }.bind(this));\n    };\n\n    // Automatically register with the modal registry the first time this module is imported so that you can create modals\n    // of this type using the modal factory.\n    if (!registered) {\n        ModalRegistry.register(ModalConfirmReport.TYPE, ModalConfirmReport, 'local_plantalentosuv/modal_confirm_report');\n        registered = true;\n    }\n\n    return ModalConfirmReport;\n});"],"file":"modal_confirm_report.min.js"}